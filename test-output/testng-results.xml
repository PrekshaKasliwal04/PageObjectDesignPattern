<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="4" failed="1" ignored="8" total="22" passed="9">
  <reporter-output>
  </reporter-output>
  <suite name="Gurukula Suite" duration-ms="651176" started-at="2019-09-02T08:30:33Z" finished-at="2019-09-02T08:41:24Z">
    <groups>
      <group name="REGRESSION">
        <method signature="DashboardTest.verifyBranchEntityType()[pri:2, instance:com.testscripts.gurukulApp.DashboardTest@6328d34a]" name="verifyBranchEntityType" class="com.testscripts.gurukulApp.DashboardTest"/>
        <method signature="DashboardTest.verifyOperationsOfBranchEntityType()[pri:4, instance:com.testscripts.gurukulApp.DashboardTest@6328d34a]" name="verifyOperationsOfBranchEntityType" class="com.testscripts.gurukulApp.DashboardTest"/>
        <method signature="DashboardTest.verifyStaffEntityType()[pri:3, instance:com.testscripts.gurukulApp.DashboardTest@6328d34a]" name="verifyStaffEntityType" class="com.testscripts.gurukulApp.DashboardTest"/>
        <method signature="DashboardTest.verifyOperationsOfStaffEntityType()[pri:5, instance:com.testscripts.gurukulApp.DashboardTest@6328d34a]" name="verifyOperationsOfStaffEntityType" class="com.testscripts.gurukulApp.DashboardTest"/>
        <method signature="PaginationTest.verifyPagination()[pri:1, instance:com.testscripts.gurukulApp.PaginationTest@145eaa29]" name="verifyPagination" class="com.testscripts.gurukulApp.PaginationTest"/>
        <method signature="AccountTest.verifyAccountMenuSettingsNotSavedError()[pri:2, instance:com.testscripts.gurukulApp.AccountTest@7f9fcf7f]" name="verifyAccountMenuSettingsNotSavedError" class="com.testscripts.gurukulApp.AccountTest"/>
        <method signature="AccountTest.verifyAccountMenuSettingsValidations()[pri:1, instance:com.testscripts.gurukulApp.AccountTest@7f9fcf7f]" name="verifyAccountMenuSettingsValidations" class="com.testscripts.gurukulApp.AccountTest"/>
        <method signature="LoginTest.verifyUserLoginWithInValidCreds()[pri:2, instance:com.testscripts.gurukulApp.LoginTest@77e9807f]" name="verifyUserLoginWithInValidCreds" class="com.testscripts.gurukulApp.LoginTest"/>
        <method signature="LoginTest.verifyUserLoginWithValidCreds()[pri:1, instance:com.testscripts.gurukulApp.LoginTest@77e9807f]" name="verifyUserLoginWithValidCreds" class="com.testscripts.gurukulApp.LoginTest"/>
        <method signature="RegisterAccountTest.verifyRegisterAccountEnrollFailure()[pri:1, instance:com.testscripts.gurukulApp.RegisterAccountTest@2357d90a]" name="verifyRegisterAccountEnrollFailure" class="com.testscripts.gurukulApp.RegisterAccountTest"/>
      </group> <!-- REGRESSION -->
    </groups>
    <test name="Gurukula application test cases" duration-ms="651176" started-at="2019-09-02T08:30:33Z" finished-at="2019-09-02T08:41:24Z">
      <class name="com.testscripts.gurukulApp.RegisterAccountTest">
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.testscripts.gurukulApp.RegisterAccountTest@2357d90a]" name="beforeMethod" is-config="true" duration-ms="12628" started-at="2019-09-02T08:31:20Z" finished-at="2019-09-02T08:31:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public final void com.testscripts.gurukulApp.RegisterAccountTest.verifyRegisterAccountEnrollFailure() throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=verifyRegisterAccountEnrollFailure status=SKIP method=RegisterAccountTest.verifyRegisterAccountEnrollFailure()[pri:1, instance:com.testscripts.gurukulApp.RegisterAccountTest@2357d90a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="verifyRegisterAccountEnrollFailure()[pri:1, instance:com.testscripts.gurukulApp.RegisterAccountTest@2357d90a]" name="verifyRegisterAccountEnrollFailure" duration-ms="343" started-at="2019-09-02T08:31:32Z" description="Test to Register new user" finished-at="2019-09-02T08:31:33Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Registration title text is incorrect expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Registration title text is incorrect expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at com.testscripts.gurukulApp.RegisterAccountTest.verifyRegisterAccountEnrollFailure(RegisterAccountTest.java:24)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegisterAccountEnrollFailure -->
        <test-method status="PASS" signature="aftermethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:com.testscripts.gurukulApp.RegisterAccountTest@2357d90a]" name="aftermethod" is-config="true" duration-ms="4842" started-at="2019-09-02T08:31:33Z" finished-at="2019-09-02T08:31:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyRegisterAccountEnrollFailure status=SKIP method=RegisterAccountTest.verifyRegisterAccountEnrollFailure()[pri:1, instance:com.testscripts.gurukulApp.RegisterAccountTest@2357d90a] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public final void com.testscripts.gurukulApp.RegisterAccountTest.verifyRegisterAccountEnrollFailure() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.testscripts.gurukulApp.RegisterAccountTest@2357d90a]" name="beforeMethod" is-config="true" duration-ms="12865" started-at="2019-09-02T08:31:38Z" finished-at="2019-09-02T08:31:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public final void com.testscripts.gurukulApp.RegisterAccountTest.verifyRegisterAccountEnrollFailure() throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=verifyRegisterAccountEnrollFailure status=SKIP method=RegisterAccountTest.verifyRegisterAccountEnrollFailure()[pri:1, instance:com.testscripts.gurukulApp.RegisterAccountTest@2357d90a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="verifyRegisterAccountEnrollFailure()[pri:1, instance:com.testscripts.gurukulApp.RegisterAccountTest@2357d90a]" name="verifyRegisterAccountEnrollFailure" duration-ms="2839" started-at="2019-09-02T08:31:50Z" description="Test to Register new user" finished-at="2019-09-02T08:31:53Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Registration failed message is not displayed expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Registration failed message is not displayed expected [false] but found [true]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertFalse(Assert.java:65)
at com.testscripts.gurukulApp.RegisterAccountTest.verifyRegisterAccountEnrollFailure(RegisterAccountTest.java:35)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.retryFailed(Invoker.java:839)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1010)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegisterAccountEnrollFailure -->
        <test-method status="PASS" signature="aftermethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:com.testscripts.gurukulApp.RegisterAccountTest@2357d90a]" name="aftermethod" is-config="true" duration-ms="6614" started-at="2019-09-02T08:31:53Z" finished-at="2019-09-02T08:32:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyRegisterAccountEnrollFailure status=SKIP method=RegisterAccountTest.verifyRegisterAccountEnrollFailure()[pri:1, instance:com.testscripts.gurukulApp.RegisterAccountTest@2357d90a] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public final void com.testscripts.gurukulApp.RegisterAccountTest.verifyRegisterAccountEnrollFailure() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.testscripts.gurukulApp.RegisterAccountTest@2357d90a]" name="beforeMethod" is-config="true" duration-ms="12617" started-at="2019-09-02T08:32:00Z" finished-at="2019-09-02T08:32:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public final void com.testscripts.gurukulApp.RegisterAccountTest.verifyRegisterAccountEnrollFailure() throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=verifyRegisterAccountEnrollFailure status=FAILURE method=RegisterAccountTest.verifyRegisterAccountEnrollFailure()[pri:1, instance:com.testscripts.gurukulApp.RegisterAccountTest@2357d90a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="verifyRegisterAccountEnrollFailure()[pri:1, instance:com.testscripts.gurukulApp.RegisterAccountTest@2357d90a]" name="verifyRegisterAccountEnrollFailure" duration-ms="2094" started-at="2019-09-02T08:32:12Z" description="Test to Register new user" finished-at="2019-09-02T08:32:15Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Registration failed message is not displayed expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Registration failed message is not displayed expected [false] but found [true]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertFalse(Assert.java:65)
at com.testscripts.gurukulApp.RegisterAccountTest.verifyRegisterAccountEnrollFailure(RegisterAccountTest.java:35)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.retryFailed(Invoker.java:839)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1010)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegisterAccountEnrollFailure -->
        <test-method status="PASS" signature="aftermethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:com.testscripts.gurukulApp.RegisterAccountTest@2357d90a]" name="aftermethod" is-config="true" duration-ms="4852" started-at="2019-09-02T08:32:15Z" finished-at="2019-09-02T08:32:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyRegisterAccountEnrollFailure status=FAILURE method=RegisterAccountTest.verifyRegisterAccountEnrollFailure()[pri:1, instance:com.testscripts.gurukulApp.RegisterAccountTest@2357d90a] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public final void com.testscripts.gurukulApp.RegisterAccountTest.verifyRegisterAccountEnrollFailure() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
      </class> <!-- com.testscripts.gurukulApp.RegisterAccountTest -->
      <class name="com.testscripts.gurukulApp.PaginationTest">
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.testscripts.gurukulApp.PaginationTest@145eaa29]" name="beforeMethod" is-config="true" duration-ms="14371" started-at="2019-09-02T08:32:19Z" finished-at="2019-09-02T08:32:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public final void com.testscripts.gurukulApp.PaginationTest.verifyPagination() throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=verifyPagination status=SUCCESS method=PaginationTest.verifyPagination()[pri:1, instance:com.testscripts.gurukulApp.PaginationTest@145eaa29] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyPagination()[pri:1, instance:com.testscripts.gurukulApp.PaginationTest@145eaa29]" name="verifyPagination" duration-ms="266272" started-at="2019-09-02T08:32:34Z" description="Test to Verify Pagination - First,Last,Next,Previous functions" finished-at="2019-09-02T08:37:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPagination -->
        <test-method status="PASS" signature="aftermethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:com.testscripts.gurukulApp.PaginationTest@145eaa29]" name="aftermethod" is-config="true" duration-ms="1837" started-at="2019-09-02T08:37:00Z" finished-at="2019-09-02T08:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyPagination status=SUCCESS method=PaginationTest.verifyPagination()[pri:1, instance:com.testscripts.gurukulApp.PaginationTest@145eaa29] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public final void com.testscripts.gurukulApp.PaginationTest.verifyPagination() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
      </class> <!-- com.testscripts.gurukulApp.PaginationTest -->
      <class name="com.testscripts.gurukulApp.DashboardTest">
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.testscripts.gurukulApp.DashboardTest@6328d34a]" name="beforeMethod" is-config="true" duration-ms="12695" started-at="2019-09-02T08:38:14Z" finished-at="2019-09-02T08:38:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public final void com.testscripts.gurukulApp.DashboardTest.verifyBranchEntityType() throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=verifyBranchEntityType status=SUCCESS method=DashboardTest.verifyBranchEntityType()[pri:2, instance:com.testscripts.gurukulApp.DashboardTest@6328d34a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyBranchEntityType()[pri:2, instance:com.testscripts.gurukulApp.DashboardTest@6328d34a]" name="verifyBranchEntityType" duration-ms="8212" started-at="2019-09-02T08:38:27Z" description="Test to verify branch addition" finished-at="2019-09-02T08:38:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyBranchEntityType -->
        <test-method status="PASS" signature="aftermethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:com.testscripts.gurukulApp.DashboardTest@6328d34a]" name="aftermethod" is-config="true" duration-ms="4637" started-at="2019-09-02T08:38:35Z" finished-at="2019-09-02T08:38:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyBranchEntityType status=SUCCESS method=DashboardTest.verifyBranchEntityType()[pri:2, instance:com.testscripts.gurukulApp.DashboardTest@6328d34a] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public final void com.testscripts.gurukulApp.DashboardTest.verifyBranchEntityType() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.testscripts.gurukulApp.DashboardTest@6328d34a]" name="beforeMethod" is-config="true" duration-ms="14800" started-at="2019-09-02T08:38:39Z" finished-at="2019-09-02T08:38:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public final void com.testscripts.gurukulApp.DashboardTest.verifyStaffEntityType() throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=verifyStaffEntityType status=SUCCESS method=DashboardTest.verifyStaffEntityType()[pri:3, instance:com.testscripts.gurukulApp.DashboardTest@6328d34a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyStaffEntityType()[pri:3, instance:com.testscripts.gurukulApp.DashboardTest@6328d34a]" name="verifyStaffEntityType" duration-ms="16037" started-at="2019-09-02T08:38:54Z" description="Test to verify staff addition" depends-on-methods="com.testscripts.gurukulApp.DashboardTest.verifyBranchEntityType" finished-at="2019-09-02T08:39:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyStaffEntityType -->
        <test-method status="PASS" signature="aftermethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:com.testscripts.gurukulApp.DashboardTest@6328d34a]" name="aftermethod" is-config="true" duration-ms="3844" started-at="2019-09-02T08:39:10Z" finished-at="2019-09-02T08:39:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyStaffEntityType status=SUCCESS method=DashboardTest.verifyStaffEntityType()[pri:3, instance:com.testscripts.gurukulApp.DashboardTest@6328d34a] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public final void com.testscripts.gurukulApp.DashboardTest.verifyStaffEntityType() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.testscripts.gurukulApp.DashboardTest@6328d34a]" name="beforeMethod" is-config="true" duration-ms="11215" started-at="2019-09-02T08:39:14Z" finished-at="2019-09-02T08:39:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public final void com.testscripts.gurukulApp.DashboardTest.verifyOperationsOfBranchEntityType() throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=verifyOperationsOfBranchEntityType status=SUCCESS method=DashboardTest.verifyOperationsOfBranchEntityType()[pri:4, instance:com.testscripts.gurukulApp.DashboardTest@6328d34a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyOperationsOfBranchEntityType()[pri:4, instance:com.testscripts.gurukulApp.DashboardTest@6328d34a]" name="verifyOperationsOfBranchEntityType" duration-ms="30689" started-at="2019-09-02T08:39:25Z" description="Test to Verify operations query,view,delete,edit for branch entity" depends-on-methods="com.testscripts.gurukulApp.DashboardTest.verifyBranchEntityType" finished-at="2019-09-02T08:39:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyOperationsOfBranchEntityType -->
        <test-method status="PASS" signature="aftermethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:com.testscripts.gurukulApp.DashboardTest@6328d34a]" name="aftermethod" is-config="true" duration-ms="2680" started-at="2019-09-02T08:39:56Z" finished-at="2019-09-02T08:39:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyOperationsOfBranchEntityType status=SUCCESS method=DashboardTest.verifyOperationsOfBranchEntityType()[pri:4, instance:com.testscripts.gurukulApp.DashboardTest@6328d34a] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public final void com.testscripts.gurukulApp.DashboardTest.verifyOperationsOfBranchEntityType() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.testscripts.gurukulApp.DashboardTest@6328d34a]" name="beforeMethod" is-config="true" duration-ms="11844" started-at="2019-09-02T08:39:59Z" finished-at="2019-09-02T08:40:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public final void com.testscripts.gurukulApp.DashboardTest.verifyOperationsOfStaffEntityType() throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=verifyOperationsOfStaffEntityType status=SKIP method=DashboardTest.verifyOperationsOfStaffEntityType()[pri:5, instance:com.testscripts.gurukulApp.DashboardTest@6328d34a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="verifyOperationsOfStaffEntityType()[pri:5, instance:com.testscripts.gurukulApp.DashboardTest@6328d34a]" name="verifyOperationsOfStaffEntityType" duration-ms="1641" started-at="2019-09-02T08:40:11Z" description="Test to Verify operations query,view,delete,edit for staff entity" depends-on-methods="com.testscripts.gurukulApp.DashboardTest.verifyStaffEntityType" finished-at="2019-09-02T08:40:12Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Dashboard title text is incorrect expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Dashboard title text is incorrect expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at com.testscripts.gurukulApp.DashboardTest.verifyOperationsOfStaffEntityType(DashboardTest.java:121)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyOperationsOfStaffEntityType -->
        <test-method status="PASS" signature="aftermethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:com.testscripts.gurukulApp.DashboardTest@6328d34a]" name="aftermethod" is-config="true" duration-ms="4604" started-at="2019-09-02T08:40:12Z" finished-at="2019-09-02T08:40:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyOperationsOfStaffEntityType status=SKIP method=DashboardTest.verifyOperationsOfStaffEntityType()[pri:5, instance:com.testscripts.gurukulApp.DashboardTest@6328d34a] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public final void com.testscripts.gurukulApp.DashboardTest.verifyOperationsOfStaffEntityType() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.testscripts.gurukulApp.DashboardTest@6328d34a]" name="beforeMethod" is-config="true" duration-ms="14876" started-at="2019-09-02T08:40:17Z" finished-at="2019-09-02T08:40:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public final void com.testscripts.gurukulApp.DashboardTest.verifyOperationsOfStaffEntityType() throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=verifyOperationsOfStaffEntityType status=SUCCESS method=DashboardTest.verifyOperationsOfStaffEntityType()[pri:5, instance:com.testscripts.gurukulApp.DashboardTest@6328d34a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyOperationsOfStaffEntityType()[pri:5, instance:com.testscripts.gurukulApp.DashboardTest@6328d34a]" name="verifyOperationsOfStaffEntityType" duration-ms="50423" started-at="2019-09-02T08:40:32Z" description="Test to Verify operations query,view,delete,edit for staff entity" depends-on-methods="com.testscripts.gurukulApp.DashboardTest.verifyStaffEntityType" finished-at="2019-09-02T08:41:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyOperationsOfStaffEntityType -->
        <test-method status="PASS" signature="aftermethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:com.testscripts.gurukulApp.DashboardTest@6328d34a]" name="aftermethod" is-config="true" duration-ms="2090" started-at="2019-09-02T08:41:22Z" finished-at="2019-09-02T08:41:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyOperationsOfStaffEntityType status=SUCCESS method=DashboardTest.verifyOperationsOfStaffEntityType()[pri:5, instance:com.testscripts.gurukulApp.DashboardTest@6328d34a] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public final void com.testscripts.gurukulApp.DashboardTest.verifyOperationsOfStaffEntityType() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
      </class> <!-- com.testscripts.gurukulApp.DashboardTest -->
      <class name="com.testscripts.gurukulApp.AccountTest">
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.testscripts.gurukulApp.AccountTest@7f9fcf7f]" name="beforeMethod" is-config="true" duration-ms="12688" started-at="2019-09-02T08:30:57Z" finished-at="2019-09-02T08:31:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public final void com.testscripts.gurukulApp.AccountTest.verifyAccountMenuSettingsValidations() throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=verifyAccountMenuSettingsValidations status=SUCCESS method=AccountTest.verifyAccountMenuSettingsValidations()[pri:1, instance:com.testscripts.gurukulApp.AccountTest@7f9fcf7f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyAccountMenuSettingsValidations()[pri:1, instance:com.testscripts.gurukulApp.AccountTest@7f9fcf7f]" name="verifyAccountMenuSettingsValidations" duration-ms="5714" started-at="2019-09-02T08:31:10Z" finished-at="2019-09-02T08:31:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAccountMenuSettingsValidations -->
        <test-method status="PASS" signature="aftermethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:com.testscripts.gurukulApp.AccountTest@7f9fcf7f]" name="aftermethod" is-config="true" duration-ms="3866" started-at="2019-09-02T08:31:16Z" finished-at="2019-09-02T08:31:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAccountMenuSettingsValidations status=SUCCESS method=AccountTest.verifyAccountMenuSettingsValidations()[pri:1, instance:com.testscripts.gurukulApp.AccountTest@7f9fcf7f] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public final void com.testscripts.gurukulApp.AccountTest.verifyAccountMenuSettingsValidations() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.testscripts.gurukulApp.AccountTest@7f9fcf7f]" name="beforeMethod" is-config="true" duration-ms="13714" started-at="2019-09-02T08:37:23Z" finished-at="2019-09-02T08:37:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public final void com.testscripts.gurukulApp.AccountTest.verifyAccountMenuSettingsNotSavedError() throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=verifyAccountMenuSettingsNotSavedError status=SKIP method=AccountTest.verifyAccountMenuSettingsNotSavedError()[pri:2, instance:com.testscripts.gurukulApp.AccountTest@7f9fcf7f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="verifyAccountMenuSettingsNotSavedError()[pri:2, instance:com.testscripts.gurukulApp.AccountTest@7f9fcf7f]" name="verifyAccountMenuSettingsNotSavedError" duration-ms="1406" started-at="2019-09-02T08:37:37Z" finished-at="2019-09-02T08:37:38Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Dashboard title text is incorrect expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Dashboard title text is incorrect expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at com.testscripts.gurukulApp.AccountTest.verifyAccountMenuSettingsNotSavedError(AccountTest.java:44)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAccountMenuSettingsNotSavedError -->
        <test-method status="PASS" signature="aftermethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:com.testscripts.gurukulApp.AccountTest@7f9fcf7f]" name="aftermethod" is-config="true" duration-ms="4236" started-at="2019-09-02T08:37:38Z" finished-at="2019-09-02T08:37:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAccountMenuSettingsNotSavedError status=SKIP method=AccountTest.verifyAccountMenuSettingsNotSavedError()[pri:2, instance:com.testscripts.gurukulApp.AccountTest@7f9fcf7f] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public final void com.testscripts.gurukulApp.AccountTest.verifyAccountMenuSettingsNotSavedError() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.testscripts.gurukulApp.AccountTest@7f9fcf7f]" name="beforeMethod" is-config="true" duration-ms="12133" started-at="2019-09-02T08:37:43Z" finished-at="2019-09-02T08:37:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public final void com.testscripts.gurukulApp.AccountTest.verifyAccountMenuSettingsNotSavedError() throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=verifyAccountMenuSettingsNotSavedError status=SUCCESS method=AccountTest.verifyAccountMenuSettingsNotSavedError()[pri:2, instance:com.testscripts.gurukulApp.AccountTest@7f9fcf7f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyAccountMenuSettingsNotSavedError()[pri:2, instance:com.testscripts.gurukulApp.AccountTest@7f9fcf7f]" name="verifyAccountMenuSettingsNotSavedError" duration-ms="14242" started-at="2019-09-02T08:37:55Z" finished-at="2019-09-02T08:38:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAccountMenuSettingsNotSavedError -->
        <test-method status="PASS" signature="aftermethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:com.testscripts.gurukulApp.AccountTest@7f9fcf7f]" name="aftermethod" is-config="true" duration-ms="4812" started-at="2019-09-02T08:38:09Z" finished-at="2019-09-02T08:38:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAccountMenuSettingsNotSavedError status=SUCCESS method=AccountTest.verifyAccountMenuSettingsNotSavedError()[pri:2, instance:com.testscripts.gurukulApp.AccountTest@7f9fcf7f] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public final void com.testscripts.gurukulApp.AccountTest.verifyAccountMenuSettingsNotSavedError() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
      </class> <!-- com.testscripts.gurukulApp.AccountTest -->
      <class name="com.testscripts.gurukulApp.LoginTest">
        <test-method status="PASS" signature="beforeSuite(org.testng.ITestContext)[pri:0, instance:com.testscripts.gurukulApp.LoginTest@77e9807f]" name="beforeSuite" is-config="true" duration-ms="134" started-at="2019-09-02T08:30:33Z" finished-at="2019-09-02T08:30:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@63cd604c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.testscripts.gurukulApp.LoginTest@77e9807f]" name="beforeMethod" is-config="true" duration-ms="16563" started-at="2019-09-02T08:30:33Z" finished-at="2019-09-02T08:30:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public final void com.testscripts.gurukulApp.LoginTest.verifyUserLoginWithValidCreds() throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=verifyUserLoginWithValidCreds status=SUCCESS method=LoginTest.verifyUserLoginWithValidCreds()[pri:1, instance:com.testscripts.gurukulApp.LoginTest@77e9807f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyUserLoginWithValidCreds()[pri:1, instance:com.testscripts.gurukulApp.LoginTest@77e9807f]" name="verifyUserLoginWithValidCreds" duration-ms="3488" started-at="2019-09-02T08:30:50Z" description="Verify User login with valid credentials and logout" finished-at="2019-09-02T08:30:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserLoginWithValidCreds -->
        <test-method status="PASS" signature="aftermethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:com.testscripts.gurukulApp.LoginTest@77e9807f]" name="aftermethod" is-config="true" duration-ms="4404" started-at="2019-09-02T08:30:53Z" finished-at="2019-09-02T08:30:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUserLoginWithValidCreds status=SUCCESS method=LoginTest.verifyUserLoginWithValidCreds()[pri:1, instance:com.testscripts.gurukulApp.LoginTest@77e9807f] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public final void com.testscripts.gurukulApp.LoginTest.verifyUserLoginWithValidCreds() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.testscripts.gurukulApp.LoginTest@77e9807f]" name="beforeMethod" is-config="true" duration-ms="13558" started-at="2019-09-02T08:37:02Z" finished-at="2019-09-02T08:37:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public final void com.testscripts.gurukulApp.LoginTest.verifyUserLoginWithInValidCreds() throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=verifyUserLoginWithInValidCreds status=SUCCESS method=LoginTest.verifyUserLoginWithInValidCreds()[pri:2, instance:com.testscripts.gurukulApp.LoginTest@77e9807f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyUserLoginWithInValidCreds()[pri:2, instance:com.testscripts.gurukulApp.LoginTest@77e9807f]" name="verifyUserLoginWithInValidCreds" duration-ms="2556" started-at="2019-09-02T08:37:15Z" description="Verify User login with Invalid credentials" finished-at="2019-09-02T08:37:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserLoginWithInValidCreds -->
        <test-method status="PASS" signature="aftermethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:com.testscripts.gurukulApp.LoginTest@77e9807f]" name="aftermethod" is-config="true" duration-ms="5238" started-at="2019-09-02T08:37:18Z" finished-at="2019-09-02T08:37:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUserLoginWithInValidCreds status=SUCCESS method=LoginTest.verifyUserLoginWithInValidCreds()[pri:2, instance:com.testscripts.gurukulApp.LoginTest@77e9807f] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public final void com.testscripts.gurukulApp.LoginTest.verifyUserLoginWithInValidCreds() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method status="PASS" signature="afterSuite(org.testng.ITestContext)[pri:0, instance:com.testscripts.gurukulApp.LoginTest@77e9807f]" name="afterSuite" is-config="true" duration-ms="0" started-at="2019-09-02T08:41:24Z" finished-at="2019-09-02T08:41:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@63cd604c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- com.testscripts.gurukulApp.LoginTest -->
    </test> <!-- Gurukula application test cases -->
  </suite> <!-- Gurukula Suite -->
</testng-results>
