<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="3" failed="0" ignored="8" total="21" passed="10">
  <reporter-output>
  </reporter-output>
  <suite name="Gurukula Suite" duration-ms="632715" started-at="2019-08-31T12:00:53Z" finished-at="2019-08-31T12:11:26Z">
    <groups>
      <group name="REGRESSION">
        <method signature="DashboardTest.verifyBranchEntityType()[pri:2, instance:com.testscripts.gurukulApp.DashboardTest@6328d34a]" name="verifyBranchEntityType" class="com.testscripts.gurukulApp.DashboardTest"/>
        <method signature="DashboardTest.verifyOperationsOfBranchEntityType()[pri:4, instance:com.testscripts.gurukulApp.DashboardTest@6328d34a]" name="verifyOperationsOfBranchEntityType" class="com.testscripts.gurukulApp.DashboardTest"/>
        <method signature="DashboardTest.verifyStaffEntityType()[pri:3, instance:com.testscripts.gurukulApp.DashboardTest@6328d34a]" name="verifyStaffEntityType" class="com.testscripts.gurukulApp.DashboardTest"/>
        <method signature="DashboardTest.verifyOperationsOfStaffEntityType()[pri:5, instance:com.testscripts.gurukulApp.DashboardTest@6328d34a]" name="verifyOperationsOfStaffEntityType" class="com.testscripts.gurukulApp.DashboardTest"/>
        <method signature="PaginationTest.verifyPagination()[pri:1, instance:com.testscripts.gurukulApp.PaginationTest@145eaa29]" name="verifyPagination" class="com.testscripts.gurukulApp.PaginationTest"/>
        <method signature="AccountTest.verifyAccountMenuSettingsNotSavedError()[pri:2, instance:com.testscripts.gurukulApp.AccountTest@7f9fcf7f]" name="verifyAccountMenuSettingsNotSavedError" class="com.testscripts.gurukulApp.AccountTest"/>
        <method signature="AccountTest.verifyAccountMenuSettingsValidations()[pri:1, instance:com.testscripts.gurukulApp.AccountTest@7f9fcf7f]" name="verifyAccountMenuSettingsValidations" class="com.testscripts.gurukulApp.AccountTest"/>
        <method signature="LoginTest.verifyUserLoginWithInValidCreds()[pri:2, instance:com.testscripts.gurukulApp.LoginTest@77e9807f]" name="verifyUserLoginWithInValidCreds" class="com.testscripts.gurukulApp.LoginTest"/>
        <method signature="LoginTest.verifyUserLoginWithValidCreds()[pri:1, instance:com.testscripts.gurukulApp.LoginTest@77e9807f]" name="verifyUserLoginWithValidCreds" class="com.testscripts.gurukulApp.LoginTest"/>
        <method signature="RegisterAccountTest.verifyRegisterAccountEnrollFailure()[pri:1, instance:com.testscripts.gurukulApp.RegisterAccountTest@2357d90a]" name="verifyRegisterAccountEnrollFailure" class="com.testscripts.gurukulApp.RegisterAccountTest"/>
      </group> <!-- REGRESSION -->
    </groups>
    <test name="Gurukula application test cases" duration-ms="632715" started-at="2019-08-31T12:00:53Z" finished-at="2019-08-31T12:11:26Z">
      <class name="com.testscripts.gurukulApp.RegisterAccountTest">
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.testscripts.gurukulApp.RegisterAccountTest@2357d90a]" name="beforeMethod" is-config="true" duration-ms="12345" started-at="2019-08-31T12:02:02Z" finished-at="2019-08-31T12:02:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public final void com.testscripts.gurukulApp.RegisterAccountTest.verifyRegisterAccountEnrollFailure() throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=verifyRegisterAccountEnrollFailure status=SUCCESS method=RegisterAccountTest.verifyRegisterAccountEnrollFailure()[pri:1, instance:com.testscripts.gurukulApp.RegisterAccountTest@2357d90a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyRegisterAccountEnrollFailure()[pri:1, instance:com.testscripts.gurukulApp.RegisterAccountTest@2357d90a]" name="verifyRegisterAccountEnrollFailure" duration-ms="2775" started-at="2019-08-31T12:02:15Z" finished-at="2019-08-31T12:02:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegisterAccountEnrollFailure -->
        <test-method status="PASS" signature="aftermethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:com.testscripts.gurukulApp.RegisterAccountTest@2357d90a]" name="aftermethod" is-config="true" duration-ms="4880" started-at="2019-08-31T12:02:17Z" finished-at="2019-08-31T12:02:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyRegisterAccountEnrollFailure status=SUCCESS method=RegisterAccountTest.verifyRegisterAccountEnrollFailure()[pri:1, instance:com.testscripts.gurukulApp.RegisterAccountTest@2357d90a] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public final void com.testscripts.gurukulApp.RegisterAccountTest.verifyRegisterAccountEnrollFailure() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
      </class> <!-- com.testscripts.gurukulApp.RegisterAccountTest -->
      <class name="com.testscripts.gurukulApp.PaginationTest">
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.testscripts.gurukulApp.PaginationTest@145eaa29]" name="beforeMethod" is-config="true" duration-ms="11224" started-at="2019-08-31T12:02:22Z" finished-at="2019-08-31T12:02:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public final void com.testscripts.gurukulApp.PaginationTest.verifyPagination() throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=verifyPagination status=SUCCESS method=PaginationTest.verifyPagination()[pri:1, instance:com.testscripts.gurukulApp.PaginationTest@145eaa29] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyPagination()[pri:1, instance:com.testscripts.gurukulApp.PaginationTest@145eaa29]" name="verifyPagination" duration-ms="266108" started-at="2019-08-31T12:02:33Z" finished-at="2019-08-31T12:07:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPagination -->
        <test-method status="PASS" signature="aftermethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:com.testscripts.gurukulApp.PaginationTest@145eaa29]" name="aftermethod" is-config="true" duration-ms="1899" started-at="2019-08-31T12:07:00Z" finished-at="2019-08-31T12:07:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyPagination status=SUCCESS method=PaginationTest.verifyPagination()[pri:1, instance:com.testscripts.gurukulApp.PaginationTest@145eaa29] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public final void com.testscripts.gurukulApp.PaginationTest.verifyPagination() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
      </class> <!-- com.testscripts.gurukulApp.PaginationTest -->
      <class name="com.testscripts.gurukulApp.DashboardTest">
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.testscripts.gurukulApp.DashboardTest@6328d34a]" name="beforeMethod" is-config="true" duration-ms="12054" started-at="2019-08-31T12:07:57Z" finished-at="2019-08-31T12:08:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public final void com.testscripts.gurukulApp.DashboardTest.verifyBranchEntityType() throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=verifyBranchEntityType status=SUCCESS method=DashboardTest.verifyBranchEntityType()[pri:2, instance:com.testscripts.gurukulApp.DashboardTest@6328d34a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyBranchEntityType()[pri:2, instance:com.testscripts.gurukulApp.DashboardTest@6328d34a]" name="verifyBranchEntityType" duration-ms="8176" started-at="2019-08-31T12:08:09Z" description="Test to verify branch addition" finished-at="2019-08-31T12:08:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyBranchEntityType -->
        <test-method status="PASS" signature="aftermethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:com.testscripts.gurukulApp.DashboardTest@6328d34a]" name="aftermethod" is-config="true" duration-ms="4903" started-at="2019-08-31T12:08:17Z" finished-at="2019-08-31T12:08:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyBranchEntityType status=SUCCESS method=DashboardTest.verifyBranchEntityType()[pri:2, instance:com.testscripts.gurukulApp.DashboardTest@6328d34a] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public final void com.testscripts.gurukulApp.DashboardTest.verifyBranchEntityType() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.testscripts.gurukulApp.DashboardTest@6328d34a]" name="beforeMethod" is-config="true" duration-ms="13046" started-at="2019-08-31T12:08:22Z" finished-at="2019-08-31T12:08:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public final void com.testscripts.gurukulApp.DashboardTest.verifyStaffEntityType() throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=verifyStaffEntityType status=SUCCESS method=DashboardTest.verifyStaffEntityType()[pri:3, instance:com.testscripts.gurukulApp.DashboardTest@6328d34a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyStaffEntityType()[pri:3, instance:com.testscripts.gurukulApp.DashboardTest@6328d34a]" name="verifyStaffEntityType" duration-ms="15685" started-at="2019-08-31T12:08:35Z" depends-on-methods="com.testscripts.gurukulApp.DashboardTest.verifyBranchEntityType" finished-at="2019-08-31T12:08:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyStaffEntityType -->
        <test-method status="PASS" signature="aftermethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:com.testscripts.gurukulApp.DashboardTest@6328d34a]" name="aftermethod" is-config="true" duration-ms="4224" started-at="2019-08-31T12:08:51Z" finished-at="2019-08-31T12:08:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyStaffEntityType status=SUCCESS method=DashboardTest.verifyStaffEntityType()[pri:3, instance:com.testscripts.gurukulApp.DashboardTest@6328d34a] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public final void com.testscripts.gurukulApp.DashboardTest.verifyStaffEntityType() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.testscripts.gurukulApp.DashboardTest@6328d34a]" name="beforeMethod" is-config="true" duration-ms="11496" started-at="2019-08-31T12:08:55Z" finished-at="2019-08-31T12:09:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public final void com.testscripts.gurukulApp.DashboardTest.verifyOperationsOfBranchEntityType() throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=verifyOperationsOfBranchEntityType status=SKIP method=DashboardTest.verifyOperationsOfBranchEntityType()[pri:4, instance:com.testscripts.gurukulApp.DashboardTest@6328d34a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="verifyOperationsOfBranchEntityType()[pri:4, instance:com.testscripts.gurukulApp.DashboardTest@6328d34a]" name="verifyOperationsOfBranchEntityType" duration-ms="1108" started-at="2019-08-31T12:09:07Z" depends-on-methods="com.testscripts.gurukulApp.DashboardTest.verifyBranchEntityType" finished-at="2019-08-31T12:09:08Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Dashboard title text is incorrect expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Dashboard title text is incorrect expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at com.testscripts.gurukulApp.DashboardTest.verifyOperationsOfBranchEntityType(DashboardTest.java:94)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyOperationsOfBranchEntityType -->
        <test-method status="PASS" signature="aftermethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:com.testscripts.gurukulApp.DashboardTest@6328d34a]" name="aftermethod" is-config="true" duration-ms="5268" started-at="2019-08-31T12:09:08Z" finished-at="2019-08-31T12:09:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyOperationsOfBranchEntityType status=SKIP method=DashboardTest.verifyOperationsOfBranchEntityType()[pri:4, instance:com.testscripts.gurukulApp.DashboardTest@6328d34a] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public final void com.testscripts.gurukulApp.DashboardTest.verifyOperationsOfBranchEntityType() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.testscripts.gurukulApp.DashboardTest@6328d34a]" name="beforeMethod" is-config="true" duration-ms="12944" started-at="2019-08-31T12:09:13Z" finished-at="2019-08-31T12:09:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public final void com.testscripts.gurukulApp.DashboardTest.verifyOperationsOfBranchEntityType() throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=verifyOperationsOfBranchEntityType status=SKIP method=DashboardTest.verifyOperationsOfBranchEntityType()[pri:4, instance:com.testscripts.gurukulApp.DashboardTest@6328d34a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="verifyOperationsOfBranchEntityType()[pri:4, instance:com.testscripts.gurukulApp.DashboardTest@6328d34a]" name="verifyOperationsOfBranchEntityType" duration-ms="1603" started-at="2019-08-31T12:09:26Z" depends-on-methods="com.testscripts.gurukulApp.DashboardTest.verifyBranchEntityType" finished-at="2019-08-31T12:09:28Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Dashboard title text is incorrect expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Dashboard title text is incorrect expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at com.testscripts.gurukulApp.DashboardTest.verifyOperationsOfBranchEntityType(DashboardTest.java:94)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.retryFailed(Invoker.java:839)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1010)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyOperationsOfBranchEntityType -->
        <test-method status="PASS" signature="aftermethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:com.testscripts.gurukulApp.DashboardTest@6328d34a]" name="aftermethod" is-config="true" duration-ms="6648" started-at="2019-08-31T12:09:28Z" finished-at="2019-08-31T12:09:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyOperationsOfBranchEntityType status=SKIP method=DashboardTest.verifyOperationsOfBranchEntityType()[pri:4, instance:com.testscripts.gurukulApp.DashboardTest@6328d34a] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public final void com.testscripts.gurukulApp.DashboardTest.verifyOperationsOfBranchEntityType() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.testscripts.gurukulApp.DashboardTest@6328d34a]" name="beforeMethod" is-config="true" duration-ms="12147" started-at="2019-08-31T12:09:34Z" finished-at="2019-08-31T12:09:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public final void com.testscripts.gurukulApp.DashboardTest.verifyOperationsOfBranchEntityType() throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=verifyOperationsOfBranchEntityType status=SUCCESS method=DashboardTest.verifyOperationsOfBranchEntityType()[pri:4, instance:com.testscripts.gurukulApp.DashboardTest@6328d34a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyOperationsOfBranchEntityType()[pri:4, instance:com.testscripts.gurukulApp.DashboardTest@6328d34a]" name="verifyOperationsOfBranchEntityType" duration-ms="30111" started-at="2019-08-31T12:09:46Z" depends-on-methods="com.testscripts.gurukulApp.DashboardTest.verifyBranchEntityType" finished-at="2019-08-31T12:10:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyOperationsOfBranchEntityType -->
        <test-method status="PASS" signature="aftermethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:com.testscripts.gurukulApp.DashboardTest@6328d34a]" name="aftermethod" is-config="true" duration-ms="2802" started-at="2019-08-31T12:10:16Z" finished-at="2019-08-31T12:10:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyOperationsOfBranchEntityType status=SUCCESS method=DashboardTest.verifyOperationsOfBranchEntityType()[pri:4, instance:com.testscripts.gurukulApp.DashboardTest@6328d34a] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public final void com.testscripts.gurukulApp.DashboardTest.verifyOperationsOfBranchEntityType() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.testscripts.gurukulApp.DashboardTest@6328d34a]" name="beforeMethod" is-config="true" duration-ms="11524" started-at="2019-08-31T12:10:19Z" finished-at="2019-08-31T12:10:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public final void com.testscripts.gurukulApp.DashboardTest.verifyOperationsOfStaffEntityType() throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=verifyOperationsOfStaffEntityType status=SUCCESS method=DashboardTest.verifyOperationsOfStaffEntityType()[pri:5, instance:com.testscripts.gurukulApp.DashboardTest@6328d34a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyOperationsOfStaffEntityType()[pri:5, instance:com.testscripts.gurukulApp.DashboardTest@6328d34a]" name="verifyOperationsOfStaffEntityType" duration-ms="53253" started-at="2019-08-31T12:10:31Z" depends-on-methods="com.testscripts.gurukulApp.DashboardTest.verifyStaffEntityType" finished-at="2019-08-31T12:11:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyOperationsOfStaffEntityType -->
        <test-method status="PASS" signature="aftermethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:com.testscripts.gurukulApp.DashboardTest@6328d34a]" name="aftermethod" is-config="true" duration-ms="1987" started-at="2019-08-31T12:11:24Z" finished-at="2019-08-31T12:11:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyOperationsOfStaffEntityType status=SUCCESS method=DashboardTest.verifyOperationsOfStaffEntityType()[pri:5, instance:com.testscripts.gurukulApp.DashboardTest@6328d34a] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public final void com.testscripts.gurukulApp.DashboardTest.verifyOperationsOfStaffEntityType() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
      </class> <!-- com.testscripts.gurukulApp.DashboardTest -->
      <class name="com.testscripts.gurukulApp.AccountTest">
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.testscripts.gurukulApp.AccountTest@7f9fcf7f]" name="beforeMethod" is-config="true" duration-ms="12100" started-at="2019-08-31T12:01:40Z" finished-at="2019-08-31T12:01:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public final void com.testscripts.gurukulApp.AccountTest.verifyAccountMenuSettingsValidations() throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=verifyAccountMenuSettingsValidations status=SUCCESS method=AccountTest.verifyAccountMenuSettingsValidations()[pri:1, instance:com.testscripts.gurukulApp.AccountTest@7f9fcf7f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyAccountMenuSettingsValidations()[pri:1, instance:com.testscripts.gurukulApp.AccountTest@7f9fcf7f]" name="verifyAccountMenuSettingsValidations" duration-ms="5521" started-at="2019-08-31T12:01:52Z" finished-at="2019-08-31T12:01:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAccountMenuSettingsValidations -->
        <test-method status="PASS" signature="aftermethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:com.testscripts.gurukulApp.AccountTest@7f9fcf7f]" name="aftermethod" is-config="true" duration-ms="4553" started-at="2019-08-31T12:01:58Z" finished-at="2019-08-31T12:02:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAccountMenuSettingsValidations status=SUCCESS method=AccountTest.verifyAccountMenuSettingsValidations()[pri:1, instance:com.testscripts.gurukulApp.AccountTest@7f9fcf7f] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public final void com.testscripts.gurukulApp.AccountTest.verifyAccountMenuSettingsValidations() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.testscripts.gurukulApp.AccountTest@7f9fcf7f]" name="beforeMethod" is-config="true" duration-ms="11669" started-at="2019-08-31T12:07:24Z" finished-at="2019-08-31T12:07:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public final void com.testscripts.gurukulApp.AccountTest.verifyAccountMenuSettingsNotSavedError() throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=verifyAccountMenuSettingsNotSavedError status=SUCCESS method=AccountTest.verifyAccountMenuSettingsNotSavedError()[pri:2, instance:com.testscripts.gurukulApp.AccountTest@7f9fcf7f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyAccountMenuSettingsNotSavedError()[pri:2, instance:com.testscripts.gurukulApp.AccountTest@7f9fcf7f]" name="verifyAccountMenuSettingsNotSavedError" duration-ms="15712" started-at="2019-08-31T12:07:36Z" finished-at="2019-08-31T12:07:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAccountMenuSettingsNotSavedError -->
        <test-method status="PASS" signature="aftermethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:com.testscripts.gurukulApp.AccountTest@7f9fcf7f]" name="aftermethod" is-config="true" duration-ms="5403" started-at="2019-08-31T12:07:52Z" finished-at="2019-08-31T12:07:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAccountMenuSettingsNotSavedError status=SUCCESS method=AccountTest.verifyAccountMenuSettingsNotSavedError()[pri:2, instance:com.testscripts.gurukulApp.AccountTest@7f9fcf7f] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public final void com.testscripts.gurukulApp.AccountTest.verifyAccountMenuSettingsNotSavedError() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
      </class> <!-- com.testscripts.gurukulApp.AccountTest -->
      <class name="com.testscripts.gurukulApp.LoginTest">
        <test-method status="PASS" signature="beforeSuite(org.testng.ITestContext)[pri:0, instance:com.testscripts.gurukulApp.LoginTest@77e9807f]" name="beforeSuite" is-config="true" duration-ms="177" started-at="2019-08-31T12:00:53Z" finished-at="2019-08-31T12:00:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@60bdf15d]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.testscripts.gurukulApp.LoginTest@77e9807f]" name="beforeMethod" is-config="true" duration-ms="14296" started-at="2019-08-31T12:00:53Z" finished-at="2019-08-31T12:01:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public final void com.testscripts.gurukulApp.LoginTest.verifyUserLoginWithValidCreds() throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=verifyUserLoginWithValidCreds status=SKIP method=LoginTest.verifyUserLoginWithValidCreds()[pri:1, instance:com.testscripts.gurukulApp.LoginTest@77e9807f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="verifyUserLoginWithValidCreds()[pri:1, instance:com.testscripts.gurukulApp.LoginTest@77e9807f]" name="verifyUserLoginWithValidCreds" duration-ms="2711" started-at="2019-08-31T12:01:08Z" description="Verify User login with valid credentials" finished-at="2019-08-31T12:01:10Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Dashboard title text is incorrect expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Dashboard title text is incorrect expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at com.testscripts.gurukulApp.LoginTest.verifyUserLoginWithValidCreds(LoginTest.java:21)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserLoginWithValidCreds -->
        <test-method status="PASS" signature="aftermethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:com.testscripts.gurukulApp.LoginTest@77e9807f]" name="aftermethod" is-config="true" duration-ms="7043" started-at="2019-08-31T12:01:10Z" finished-at="2019-08-31T12:01:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUserLoginWithValidCreds status=SKIP method=LoginTest.verifyUserLoginWithValidCreds()[pri:1, instance:com.testscripts.gurukulApp.LoginTest@77e9807f] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public final void com.testscripts.gurukulApp.LoginTest.verifyUserLoginWithValidCreds() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.testscripts.gurukulApp.LoginTest@77e9807f]" name="beforeMethod" is-config="true" duration-ms="12769" started-at="2019-08-31T12:01:17Z" finished-at="2019-08-31T12:01:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public final void com.testscripts.gurukulApp.LoginTest.verifyUserLoginWithValidCreds() throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=verifyUserLoginWithValidCreds status=SUCCESS method=LoginTest.verifyUserLoginWithValidCreds()[pri:1, instance:com.testscripts.gurukulApp.LoginTest@77e9807f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyUserLoginWithValidCreds()[pri:1, instance:com.testscripts.gurukulApp.LoginTest@77e9807f]" name="verifyUserLoginWithValidCreds" duration-ms="3286" started-at="2019-08-31T12:01:30Z" description="Verify User login with valid credentials" finished-at="2019-08-31T12:01:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserLoginWithValidCreds -->
        <test-method status="PASS" signature="aftermethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:com.testscripts.gurukulApp.LoginTest@77e9807f]" name="aftermethod" is-config="true" duration-ms="6565" started-at="2019-08-31T12:01:33Z" finished-at="2019-08-31T12:01:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUserLoginWithValidCreds status=SUCCESS method=LoginTest.verifyUserLoginWithValidCreds()[pri:1, instance:com.testscripts.gurukulApp.LoginTest@77e9807f] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public final void com.testscripts.gurukulApp.LoginTest.verifyUserLoginWithValidCreds() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.testscripts.gurukulApp.LoginTest@77e9807f]" name="beforeMethod" is-config="true" duration-ms="12059" started-at="2019-08-31T12:07:01Z" finished-at="2019-08-31T12:07:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public final void com.testscripts.gurukulApp.LoginTest.verifyUserLoginWithInValidCreds() throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=verifyUserLoginWithInValidCreds status=SUCCESS method=LoginTest.verifyUserLoginWithInValidCreds()[pri:2, instance:com.testscripts.gurukulApp.LoginTest@77e9807f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyUserLoginWithInValidCreds()[pri:2, instance:com.testscripts.gurukulApp.LoginTest@77e9807f]" name="verifyUserLoginWithInValidCreds" duration-ms="2593" started-at="2019-08-31T12:07:13Z" description="Verify User login with valid credentials" finished-at="2019-08-31T12:07:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserLoginWithInValidCreds -->
        <test-method status="PASS" signature="aftermethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:com.testscripts.gurukulApp.LoginTest@77e9807f]" name="aftermethod" is-config="true" duration-ms="8169" started-at="2019-08-31T12:07:16Z" finished-at="2019-08-31T12:07:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUserLoginWithInValidCreds status=SUCCESS method=LoginTest.verifyUserLoginWithInValidCreds()[pri:2, instance:com.testscripts.gurukulApp.LoginTest@77e9807f] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public final void com.testscripts.gurukulApp.LoginTest.verifyUserLoginWithInValidCreds() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method status="PASS" signature="afterSuite(org.testng.ITestContext)[pri:0, instance:com.testscripts.gurukulApp.LoginTest@77e9807f]" name="afterSuite" is-config="true" duration-ms="0" started-at="2019-08-31T12:11:26Z" finished-at="2019-08-31T12:11:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@60bdf15d]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- com.testscripts.gurukulApp.LoginTest -->
    </test> <!-- Gurukula application test cases -->
  </suite> <!-- Gurukula Suite -->
</testng-results>
